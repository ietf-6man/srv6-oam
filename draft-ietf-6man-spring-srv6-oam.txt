



6man                                                              Z. Ali
Internet-Draft                                               C. Filsfils
Intended status: Standards Track                           Cisco Systems
Expires: September 10, 2020                                S. Matsushima
                                                                Softbank
                                                                D. Voyer
                                                             Bell Canada
                                                                 M. Chen
                                                                  Huawei
                                                           March 9, 2020


  Operations, Administration, and Maintenance (OAM) in Segment Routing
                  Networks with IPv6 Data plane (SRv6)
                   draft-ietf-6man-spring-srv6-oam-04

Abstract

   This document defines building blocks for Operations, Administration,
   and Maintenance (OAM) in Segment Routing Networks with IPv6 Dataplane
   (SRv6).  The document also describes some SRv6 OAM mechanisms.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on September 10, 2020.

Copyright Notice

   Copyright (c) 2020 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (https://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents



Ali, et al.            Expires September 10, 2020               [Page 1]

Internet-Draft                  SRv6 OAM                      March 2020


   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
   2.  Requirements Language . . . . . . . . . . . . . . . . . . . .   2
   3.  Abbreviations . . . . . . . . . . . . . . . . . . . . . . . .   3
   4.  Terminology and Reference Topology  . . . . . . . . . . . . .   3
   5.  OAM Mechanisms  . . . . . . . . . . . . . . . . . . . . . . .   5
     5.1.  O-flag in Segment Routing Header  . . . . . . . . . . . .   5
       5.1.1.  O-flag Processing . . . . . . . . . . . . . . . . . .   5
   6.  Illustrations . . . . . . . . . . . . . . . . . . . . . . . .   6
     6.1.  Ping in SRv6 Networks . . . . . . . . . . . . . . . . . .   6
       6.1.1.  Classic Ping  . . . . . . . . . . . . . . . . . . . .   6
       6.1.2.  Pinging a SID . . . . . . . . . . . . . . . . . . . .   8
     6.2.  Traceroute  . . . . . . . . . . . . . . . . . . . . . . .   9
       6.2.1.  Classic Traceroute  . . . . . . . . . . . . . . . . .   9
       6.2.2.  Traceroute to a SID . . . . . . . . . . . . . . . . .  10
     6.3.  Monitoring of SRv6 Paths  . . . . . . . . . . . . . . . .  12
   7.  Implementation Status . . . . . . . . . . . . . . . . . . . .  13
   8.  Security Considerations . . . . . . . . . . . . . . . . . . .  13
   9.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .  13
     9.1.  Segment Routing Header Flags  . . . . . . . . . . . . . .  13
   10. Acknowledgements  . . . . . . . . . . . . . . . . . . . . . .  13
   11. Contributors  . . . . . . . . . . . . . . . . . . . . . . . .  13
   12. References  . . . . . . . . . . . . . . . . . . . . . . . . .  15
     12.1.  Normative References . . . . . . . . . . . . . . . . . .  15
     12.2.  Informative References . . . . . . . . . . . . . . . . .  15
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  16

1.  Introduction

   This document defines building blocks for Operations, Administration,
   and Maintenance (OAM) in Segment Routing Networks with IPv6 Dataplane
   (SRv6).

2.  Requirements Language

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in [RFC2119], [RFC8174].






Ali, et al.            Expires September 10, 2020               [Page 2]

Internet-Draft                  SRv6 OAM                      March 2020


3.  Abbreviations

   The following abbreviations are used in this document:

      SID: Segment ID.

      SL: Segments Left.

      SR: Segment Routing.

      SRH: Segment Routing Header.

      SRv6: Segment Routing with IPv6 Data plane.

      TC: Traffic Class.

      ICMPv6: ICMPv6 Specification [RFC4443].

4.  Terminology and Reference Topology

   This document uses the terminology defined in [I-D.ietf- spring-srv6-
   network-programming].  The readers are expected to be familiar with
   the same.

   Throughout the document, the following simple topology is used for
   illustration.

            +--------------------------| N100 |------------------------+
            |                                                          |
               ====== link1====== link3------ link5====== link9------
               ||N1||======||N2||======| N3 |======||N4||======| N5 |
               ||  ||------||  ||------|    |------||  ||------|    |
               ====== link2====== link4------ link6======link10------
                              |                      |
                              |       ------         |
                              +-------| N6 |---------+
                                link7 |    | link8
                                      ------

                            Figure 1 Reference Topology


   In the reference topology:

      Node k has a classic IPv6 loopback address A:k::/128.

      Nodes N1, N2, and N4 are SRv6 capable nodes.




Ali, et al.            Expires September 10, 2020               [Page 3]

Internet-Draft                  SRv6 OAM                      March 2020


      Nodes N3, N5 and N6 are non-SRv6 (classic IPv6) nodes.

      A SID at node k with locator block B and function F is represented
      by B:k:F::.

      Node N100 is a controller.

      The IPv6 address of the nth Link between node X and Y at the X
      side is represented as 2001:DB8:X:Y:Xn::, e.g., the IPv6 address
      of link6 (the 2nd link) between N3 and N4 at N3 in Figure 1 is
      2001:DB8:3:4:32::.  Similarly, the IPv6 address of link5 (the 1st
      link between N3 and N4) at node 3 is 2001:DB8:3:4:31::.

      B:k:Cij:: is explicitly allocated as the END.X function at node k
      towards neighbor node i via jth Link between node i and node k.
      e.g., B:2:C31:: represents END.X at N2 towards N3 via link3 (the
      1st link between N2 and N3).  Similarly, B:4:C52:: represents the
      END.X at N4 towards N5 via link10.

      A SID list is represented as <S1, S2, S3> where S1 is the first
      SID to visit, S2 is the second SID to visit and S3 is the last SID
      to visit along the SR path.

      (SA,DA) (S3, S2, S1; SL)(payload) represents an IPv6 packet with:

      *  IPv6 header with source address SA, destination addresses DA
         and SRH as next-header

      *  SRH with SID list <S1, S2, S3> with SegmentsLeft = SL

      *  Note the difference between the < > and () symbols: <S1, S2,
         S3> represents a SID list where S1 is the first SID and S3 is
         the last SID to traverse.  (S3, S2, S1; SL) represents the same
         SID list but encoded in the SRH format where the rightmost SID
         in the SRH is the first SID and the leftmost SID in the SRH is
         the last SID.  When referring to an SR policy in a high-level
         use-case, it is simpler to use the <S1, S2, S3> notation.  When
         referring to an illustration of the detailed packet behavior,
         the (S3, S2, S1; SL) notation is more convenient.

      *  (payload) represents the the payload of the packet.

      SRH[SL] represents the SID pointed by the SL field in the first
      SRH.  In our example SID list (S3, S2, S1; SL), SRH[2] represents
      S1, SRH[1] represents S2 and SRH[0] represents S3.






Ali, et al.            Expires September 10, 2020               [Page 4]

Internet-Draft                  SRv6 OAM                      March 2020


5.  OAM Mechanisms

   As Segment Routing with IPv6 data plane (SRv6) simply adds a new type
   of Routing Extension Header, existing IPv6 OAM mechanisms can be used
   in an SRv6 network.

   This section defines the O-flag for implementing a controller based
   extended OAM mechanism in SRv6 networks.

5.1.  O-flag in Segment Routing Header

   [I-D.ietf-6man-segment-routing-header] describes the Segment Routing
   Header (SRH) and how SR capable nodes use it.  The SRH contains an
   8-bit "Flags" field.  This document defines the following bit in the
   SRH.Flags to carry the O-flag:

                  0 1 2 3 4 5 6 7
                 +-+-+-+-+-+-+-+-+
                 |   |O|         |
                 +-+-+-+-+-+-+-+-+


   Where:

      O-flag: OAM flag.  When set, it indicates that this packet is an
      Operation Administration and Maintenance (OAM) packet.  This
      document defines the usage of the O-flag in the SRH.Flags.

   The document does not define any other flag in the SRH.Flags and
   meaning and processing of any other bit in SRH.Flags is outside of
   the scope of this document.

5.1.1.  O-flag Processing

   The SRH.Flags.O-flag implements the "punt a timestamped copy of the
   packet" behavior.  This enables an SRv6 Endpoint node to send a
   timestamped copy of the packets marked with o-flag to a local OAM
   process.  To prevent multiple evaluations of the datagram, the OAM
   process MUST NOT process the packet or respond to any upper-layer
   header (like ICMP, UDP, etc.) payload.  However, the OAM process MAY
   export the time-stamped copy of the packet to a controller using
   e.g., IPFIX [RFC7011].  If data from the last node in the segment-
   list (Egress node) is desired, the ingress uses an Ultimate Segment
   Pop (USP) SID advertised by the Egress node.  To avoid hitting any
   performance impact, the processing node SHOULD rate-limit the number
   of packets punted to the OAM process.  Specification of the OAM
   process or the external controller operations are beyond the scope of
   this document.



Ali, et al.            Expires September 10, 2020               [Page 5]

Internet-Draft                  SRv6 OAM                      March 2020


   Implementation of the O-flag is OPTIONAL.  If a node does not support
   the O-flag, then upon reception it simply ignores it.

   If a node supports the O-flag, it can optionally advertise its
   potential via node capability advertisement in IGP [I-D.ietf-isis-
   srv6- extensions] and BGP-LS [I-D.ietf-idr-bgpls-srv6-ext].

   When N receives a packet whose IPv6 DA is S and S is a local SID, the
   line S01 of the pseudo-code associated with the SID S, as defined in
   section 4.3.1.1 of [I-D.ietf-6man-segment-routing-header], is
   modified as follows for the O-flag processing.

      S01.1. IF SRH.Flags.O-flag is set and local configuration permits
             O-flag processing THEN
                a. Make a copy of the packet.
                b. Send the copied packet, along with a timestamp
                to the OAM process.      ;; Ref1
      Ref1: An implementation SHOULD copy and record the timestamp as
      soon as possible during packet processing. Timestamp is not
      carried in the packet forwarded to the next hop.


   Please note that the O-flag processing happens before execution of
   regular processing of the local SID S.

6.  Illustrations

   This section illustrates the use of existing IPv6 OAM mechanisms in
   the SRv6 network.

6.1.  Ping in SRv6 Networks

   The following subsections outline some use cases of the ICMP ping in
   the SRv6 networks.

6.1.1.  Classic Ping

   The existing mechanism to query liveliness of a remote IP address,
   along the shortest path, continues to work without any modification.
   The initiator may be an SRv6 node or a classic IPv6 node.  Similarly,
   the egress or transit may be an SRv6 capable node or a classic IPv6
   node.

   If an SRv6 capable ingress node wants to ping an IPv6 prefix via an
   arbitrary segment list <S1, S2, S3>, it needs to initiate ICMPv6 ping
   with an SR header containing the SID list <S1, S2, S3>.  This is
   illustrated using the topology in Figure 1.  Assume all the links
   have IGP metric 10 except both links between node2 and node3, which



Ali, et al.            Expires September 10, 2020               [Page 6]

Internet-Draft                  SRv6 OAM                      March 2020


   have IGP metric set to 100.  User issues a ping from node N1 to a
   loopback of node 5, via segment list <B:2:C31, B:4:C52>.

   Figure 2 contains sample output for a ping request initiated at node
   N1 to the loopback address of node N5 via a segment list <B:2:C31,
   B:4:C52>.


       > ping A:5:: via segment-list B:2:C31, B:4:C52

       Sending 5, 100-byte ICMP Echos to B5::, timeout is 2 seconds:
       !!!!!
       Success rate is 100 percent (5/5), round-trip min/avg/max = 0.625
       /0.749/0.931 ms

               Figure 2 A sample ping output at an SRv6 capable node


   All transit nodes process the echo request message like any other
   data packet carrying SR header and hence do not require any change.
   Similarly, the egress node (IPv6 classic or SRv6 capable) does not
   require any change to process the ICMPv6 echo request.  For example,
   in the ping example of Figure 2:

   o  Node N1 initiates an ICMPv6 ping packet with SRH as follows
      (A:1::, B:2:C31)(A:5::, B:4:C52, B:2:C31, SL=2, NH =
      ICMPv6)(ICMPv6 Echo Request).  If B:4:C52 is a PSP SID, the OAM
      probes encodes the PSP SID in the packet (just mimicking data
      packets).  No special consideration is needed to handle PSP SIDs.

   o  Node N2, which is an SRv6 capable node, performs the standard SRH
      processing.  Specifically, it executes the END.X function
      (B:2:C31) and forwards the packet on link3 to N3.

   o  Node N3, which is a classic IPv6 node, performs the standard IPv6
      processing.  Specifically, it forwards the echo request based on
      the DA B:4:C52 in the IPv6 header.

   o  Node N4, which is an SRv6 capable node, performs the standard SRH
      processing.  Specifically, it observes the END.X function
      (B:4:C52) and forwards the packet on link10 towards N5.  If
      B:4:C52 is a PSP SID, The penultimate node (Node N4) does not,
      should no and cannot differentiate between the data packets and
      OAM probes.  Specifically, if B:4:C52B:4:C52 is a PSP SID, node N4
      executes the SID like any other data packet with DA = B:4:C52 and
      removes the SRH.





Ali, et al.            Expires September 10, 2020               [Page 7]

Internet-Draft                  SRv6 OAM                      March 2020


   o  The echo request packet at N5 arrives as an IPv6 packet with or
      without an SRH.  If N5 receives the packet with SRH, it skips SRH
      processing.  In either case, Node N5 performs the standard IPv6/
      ICMPv6 processing on the echo request.

6.1.2.  Pinging a SID

   The classic ping described in the previous section applies equally to
   ping a remote SID function, as explained using an example in the
   following.

   Consider the example where the user wants to ping a remote SID
   function B:4, via B:2:C31, from node N1.  The ICMPv6 echo request is
   processed at the individual nodes along the path as follows:

   o  Node N1 initiates an ICMPv6 ping packet with SRH as follows
      (A:1::, B:2:C31)(B:4, B:2:C31; SL=1; NH=ICMPv6)(ICMPv6 Echo
      Request).  If B:2:C31 is a PSP SID, the OAM probes encodes the PSP
      SID in the packet (just mimicking data packets).  No special
      consideration is needed to handle PSP SIDs.

   o  Node N2, which is an SRv6 capable node, performs the standard SRH
      processing.  Specifically, it executes the END.X function
      (B:2:C31) on the echo request packet.  If B:2:C31 is a PSP SID,
      node N4 executes the SID like any other data packet with DA =
      B:2:C31 and removes the SRH.

   o  Node N3, which is a classic IPv6 node, performs the standard IPv6
      processing.  Specifically, it forwards the echo request based on
      DA = B:4 in the IPv6 header.

   o  When node N4 receives the packet, it processes the B:4 SID, as
      described in the pseudocode in [I-D.ietf-spring-srv6-network-
      programming].

   o  If the B:4 SID is not locally programmed, the OAM process returns
      an ICMPv6 error message type 4 (parameter problem) code 0
      (erroneous header field encountered) with pointer set to the
      target SID B:4 and the packet is discarded

   o  If the target SID (B:4) is locally programmed, the node processes
      the upper layer header.  As part of the upper layer header
      processing node N4 responses to the ICMPv6 echo request message.








Ali, et al.            Expires September 10, 2020               [Page 8]

Internet-Draft                  SRv6 OAM                      March 2020


6.2.  Traceroute

   There is no hardware or software change required for traceroute
   operation at the classic IPv6 nodes in an SRv6 network.  That
   includes the classic IPv6 node with ingress, egress or transit roles.
   Furthermore, no protocol changes are required to the standard
   traceroute operations.  In other words, existing traceroute
   mechanisms work seamlessly in the SRv6 networks.

   The following subsections outline some use cases of the traceroute in
   the SRv6 networks.

6.2.1.  Classic Traceroute

   The existing mechanism to traceroute a remote IP address, along the
   shortest path, continues to work without any modification.  The
   initiator may be an SRv6 node or a classic IPv6 node.  Similarly, the
   egress or transit may be an SRv6 node or a classic IPv6 node.

   If an SRv6 capable ingress node wants to traceroute to IPv6 prefix
   via an arbitrary segment list <S1, S2, S3>, it needs to initiate
   traceroute probe with an SR header containing the SID list <S1, S2,
   S3>.  That is illustrated using the topology in Figure 1.  Assume all
   the links have IGP metric 10 except both links between node2 and
   node3, which have IGP metric set to 100.  User issues a traceroute
   from node N1 to a loopback of node 5, via segment list <B:2:C31,
   B:4:C52>.  Figure 3 contains sample output for the traceroute
   request.


        > traceroute A:5:: via segment-list B:2:C31, B:4:C52

        Tracing the route to A:5::
         1  2001:DB8:1:2:21:: 0.512 msec 0.425 msec 0.374 msec
            SRH: (A:5::, B:4:C52, B:2:C31, SL=2)
         2  2001:DB8:2:3:31:: 0.721 msec 0.810 msec 0.795 msec
            SRH: (A:5::, B:4:C52, B:2:C31, SL=1)
         3  2001:DB8:3:4::41:: 0.921 msec 0.816 msec 0.759 msec
            SRH: (A:5::, B:4:C52, B:2:C31, SL=1)
         4  2001:DB8:4:5::52:: 0.879 msec 0.916 msec 1.024 msec

         Figure 3 A sample traceroute output at an SRv6 capable node


   Please note that information for hop2 is returned by N3, which is a
   classic IPv6 node.  Nonetheless, the ingress node is able to display
   SR header contents as the packet travels through the IPv6 classic
   node.  This is because the "Time Exceeded Message" ICMPv6 message can



Ali, et al.            Expires September 10, 2020               [Page 9]

Internet-Draft                  SRv6 OAM                      March 2020


   contain as much of the invoking packet as possible without the ICMPv6
   packet exceeding the minimum IPv6 MTU [RFC4443].  The SR header is
   also included in these ICMPv6 messages initiated by the classic IPv6
   transit nodes that are not running SRv6 software.  Specifically, a
   node generating ICMPv6 message containing a copy of the invoking
   packet does not need to understand the extension header(s) in the
   invoking packet.

   The segment list information returned for hop1 is returned by N2,
   which is an SRv6 capable node.  Just like for hop2, the ingress node
   is able to display SR header contents for hop1.

   There is no difference in processing of the traceroute probe at an
   IPv6 classic node and an SRv6 capable node.  Similarly, both IPv6
   classic and SRv6 capable nodes may use the address of the interface
   on which probe was received as the source address in the ICMPv6
   response.  ICMP extensions defined in [RFC5837] can be used to also
   display information about the IP interface through which the datagram
   would have been forwarded had it been forwardable, and the IP next
   hop to which the datagram would have been forwarded, the IP interface
   upon which a datagram arrived, the sub-IP component of an IP
   interface upon which a datagram arrived.

   The information about the IP address of the incoming interface on
   which the traceroute probe was received by the reporting node is very
   useful.  This information can also be used to verify if SID functions
   B:2:C31 and B:4:C52 are executed correctly by N2 and N4,
   respectively.  Specifically, the information displayed for hop2
   contains the incoming interface address 2001:DB8:2:3:31:: at N3.
   This matches with the expected interface bound to END.X function
   B:2:C31 (link3).  Similarly, the information displayed for hop5
   contains the incoming interface address 2001:DB8:4:5::52:: at N5.
   This matches with the expected interface bound to the END.X function
   B:4:C52 (link10).

6.2.2.  Traceroute to a SID

   The classic traceroute described in the previous section applies
   equally to traceroute a remote SID function, as explained using an
   example in the following.

   Consider the example where the user wants to traceroute a remote SID
   function B:4, via B:2:C31, from node N1.  The traceroute probe is
   processed at the individual nodes along the path as described in the
   following.






Ali, et al.            Expires September 10, 2020              [Page 10]

Internet-Draft                  SRv6 OAM                      March 2020


   Please note that traceroute to a SID function is exemplified using
   UDP probes.  However, the procedure is equally applicable to other
   implementation of traceroute mechanism.

   Consider the example where the user wants to traceroute to a remote
   SID function B:4, via B:2:C31, from node N.  The traceroute probe is
   processed at the individual nodes along the path as follows:

   o  Node N1 initiates a traceroute probe packet with a monotonically
      increasing value of hop count and SRH as follows (A:1::,
      B:2:C31)(B:4, B:2:C31; SL=1; NH=UDP)(Traceroute probe).  If
      B:2:C31 is a PSP SID, the OAM probes encodes the PSP SID in the
      packet (just mimicking data packets).  No special consideration is
      needed to handle PSP SIDs.

   o  When node N2 receives the packet with hop-count = 1, it processes
      the hop count expiry.  Specifically, the node N2 responses with
      the ICMPv6 message (Type: "Time Exceeded", Code: "Time to Live
      exceeded in Transit").

   o  When Node N2 receives the packet with hop-count > 1, it performs
      the standard SRH processing.  Specifically, it executes the END.X
      function (B:2:C31) on the traceroute probe.  If B:2:C31 is a PSP
      SID, node N4 executes the SID like any other data packet with DA =
      B:2:C31 and removes the SRH.

   o  When node N3, which is a classic IPv6 node, receives the packet
      with hop-count = 1, it processes the hop count expiry.
      Specifically, the node N3 responses with the ICMPv6 message (Type:
      "Time Exceeded", Code: "Time to Live exceeded in Transit").

   o  When node N3, which is a classic IPv6 node, receives the packet
      with hop-count > 1, it performs the standard IPv6 processing.
      Specifically, it forwards the traceroute probe based on DA B:4 in
      the IPv6 header.

   o  When node N4 receives the packet with DA set to the local SID B:4,
      it processes the END SID, as described in the pseudocode in [I-
      D.ietf-spring-srv6-network-programming].

   o  If the B:4 SID is not locally programmed, the OAM process returns
      an ICMPv6 error message type 4 (parameter problem) code 0
      (erroneous header field encountered) with pointer set to the
      target SID B:4 and the packet is discarded.

   o  If the target SID (B:4) is locally programmed, the node processes
      the upper layer header.  As part of the upper layer header




Ali, et al.            Expires September 10, 2020              [Page 11]

Internet-Draft                  SRv6 OAM                      March 2020


      processing node N4 responses with the ICMPv6 message (Type:
      Destination unreachable, Code: Port Unreachable).

   Figure 4 displays a sample traceroute output for this example.

        > traceroute srv6 B:4:C52 via segment-list B:2:C31

        Tracing the route to SID function B:4:C52
         1  2001:DB8:1:2:21 0.512 msec 0.425 msec 0.374 msec
            SRH: (B:4, B:2:C31; SL=1)
         2  2001:DB8:2:3:31 0.721 msec 0.810 msec 0.795 msec
            SRH: (B:4, B:2:C31; SL=0)
         3  2001:DB8:3:4::41 0.921 msec 0.816 msec 0.759 msec
            SRH: (B:4, B:2:C31; SL=0)

           Figure 4 A sample output for hop-by-hop traceroute to a SID



6.3.  Monitoring of SRv6 Paths

   In the recent past, network operators are interested in performing
   network OAM functions in a centralized manner.  Various data models
   like YANG are available to collect data from the network and manage
   it from a centralized entity.

   SR technology enables a centralized OAM entity to perform path
   monitoring from centralized OAM entity without control plane
   intervention on monitored nodes.  [RFC 8403] describes such a
   centralized OAM mechanism.  Specifically, the draft describes a
   procedure that can be used to perform path continuity check between
   any nodes within an SR domain from a centralized monitoring system,
   with minimal or no control plane intervene on the nodes.  However,
   the draft focuses on SR networks with MPLS data plane.  The same
   concept applies to the SRv6 networks.  This document describes how
   the concept can be used to perform path monitoring in an SRv6
   network.  This document describes how the concept can be used to
   perform path monitoring in an SRv6 network as follows.

   In the above reference topology, N100 is the centralized monitoring
   system implementing an END function B:100:1::. In order to verify a
   segment list <B:2:C31, B:4:C52>, N100 generates a probe packet with
   SRH set to (B:100:1::, B:4:C52, B:2:C31, SL=2).  The controller
   routes the probe packet towards the first segment, which is B:2:C31.
   N2 performs the standard SRH processing and forward it over link3
   with the DA of IPv6 packet set to B:4:C52.  N4 also performs the
   normal SRH processing and forward it over link10 with the DA of IPv6




Ali, et al.            Expires September 10, 2020              [Page 12]

Internet-Draft                  SRv6 OAM                      March 2020


   packet set to B:100:1::. This makes the probe loops back to the
   centralized monitoring system.

   In the reference topology in Figure 1, N100 uses an IGP protocol like
   OSPF or ISIS to get the topology view within the IGP domain.  N100
   can also use BGP-LS to get the complete view of an inter-domain
   topology.  In other words, the controller leverages the visibility of
   the topology to monitor the paths between the various endpoints
   without control plane intervention required at the monitored nodes.

7.  Implementation Status

   This section is to be removed prior to publishing as an RFC.

   See [I-D.matsushima-spring-srv6-deployment-status] for updated
   deployment and interoperability reports.

8.  Security Considerations

   This document does not define any new protocol extensions and relies
   on existing procedures defined for ICMP.  This document does not
   impose any additional security challenges to be considered beyond
   security considerations described in [RFC4884], [RFC4443], [RFC792],
   RFCs that updates these RFCs, [I-D.ietf-6man-segment-routing-header]
   and [I-D.ietf-spring-srv6-network-programming].

9.  IANA Considerations

9.1.  Segment Routing Header Flags

   This I-D requests to IANA to allocate bit position 2, within the
   "Segment Routing Header Flags" registry defined in [I-D.draft-ietf-
   6man-segment-routing-header].

10.  Acknowledgements

   The authors would like to thank Gaurav Naik for his review comments.

11.  Contributors

   The following people have contributed to this document:

      Robert Raszuk
      Bloomberg LP
      Email: robert@raszuk.net






Ali, et al.            Expires September 10, 2020              [Page 13]

Internet-Draft                  SRv6 OAM                      March 2020


      John Leddy
      Individual
      Email: john@leddy.net


      Gaurav Dawra
      LinkedIn
      Email: gdawra.ietf@gmail.com


      Bart Peirens
      Proximus
      Email: bart.peirens@proximus.com


      Nagendra Kumar
      Cisco Systems, Inc.
      Email: naikumar@cisco.com


      Carlos Pignataro
      Cisco Systems, Inc.
      Email: cpignata@cisco.com


      Rakesh Gandhi
      Cisco Systems, Inc.
      Canada
      Email: rgandhi@cisco.com


      Frank Brockners
      Cisco Systems, Inc.
      Germany
      Email: fbrockne@cisco.com


      Darren Dukes
      Cisco Systems, Inc.
      Email: ddukes@cisco.com


      Cheng Li
      Huawei
      Email: chengli13@huawei.com






Ali, et al.            Expires September 10, 2020              [Page 14]

Internet-Draft                  SRv6 OAM                      March 2020


      Faisal Iqbal
      Individual
      Email: faisal.ietf@gmail.com


12.  References

12.1.  Normative References

   [I-D.ietf-6man-segment-routing-header]
              Filsfils, C., Dukes, D., Previdi, S., Leddy, J.,
              Matsushima, S., and D. Voyer, "IPv6 Segment Routing Header
              (SRH)", draft-ietf-6man-segment-routing-header-26 (work in
              progress), October 2019.

   [I-D.ietf-spring-srv6-network-programming]
              Filsfils, C., Camarillo, P., Leddy, J., Voyer, D.,
              Matsushima, S., and Z. Li, "SRv6 Network Programming",
              draft-ietf-spring-srv6-network-programming-12 (work in
              progress), March 2020.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/info/rfc2119>.

12.2.  Informative References

   [I-D.matsushima-spring-srv6-deployment-status]
              Matsushima, S., Filsfils, C., Ali, Z., and Z. Li, "SRv6
              Implementation and Deployment Status", draft-matsushima-
              spring-srv6-deployment-status-05 (work in progress),
              January 2020.

   [RFC0792]  Postel, J., "Internet Control Message Protocol", STD 5,
              RFC 792, DOI 10.17487/RFC0792, September 1981,
              <https://www.rfc-editor.org/info/rfc792>.

   [RFC4443]  Conta, A., Deering, S., and M. Gupta, Ed., "Internet
              Control Message Protocol (ICMPv6) for the Internet
              Protocol Version 6 (IPv6) Specification", STD 89,
              RFC 4443, DOI 10.17487/RFC4443, March 2006,
              <https://www.rfc-editor.org/info/rfc4443>.

   [RFC4884]  Bonica, R., Gan, D., Tappan, D., and C. Pignataro,
              "Extended ICMP to Support Multi-Part Messages", RFC 4884,
              DOI 10.17487/RFC4884, April 2007,
              <https://www.rfc-editor.org/info/rfc4884>.



Ali, et al.            Expires September 10, 2020              [Page 15]

Internet-Draft                  SRv6 OAM                      March 2020


   [RFC5837]  Atlas, A., Ed., Bonica, R., Ed., Pignataro, C., Ed., Shen,
              N., and JR. Rivers, "Extending ICMP for Interface and
              Next-Hop Identification", RFC 5837, DOI 10.17487/RFC5837,
              April 2010, <https://www.rfc-editor.org/info/rfc5837>.

   [RFC8403]  Geib, R., Ed., Filsfils, C., Pignataro, C., Ed., and N.
              Kumar, "A Scalable and Topology-Aware MPLS Data-Plane
              Monitoring System", RFC 8403, DOI 10.17487/RFC8403, July
              2018, <https://www.rfc-editor.org/info/rfc8403>.

Authors' Addresses

   Zafar Ali
   Cisco Systems

   Email: zali@cisco.com


   Clarence Filsfils
   Cisco Systems

   Email: cfilsfil@cisco.com


   Satoru Matsushima
   Softbank

   Email: satoru.matsushima@g.softbank.co.jp


   Daniel Voyer
   Bell Canada

   Email: daniel.voyer@bell.ca


   Mach Chen
   Huawei

   Email: mach.chen@huawei.com











Ali, et al.            Expires September 10, 2020              [Page 16]
